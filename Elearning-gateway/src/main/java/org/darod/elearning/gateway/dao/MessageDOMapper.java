package org.darod.elearning.gateway.dao;

import org.apache.ibatis.annotations.Param;
import org.darod.elearning.common.dto.CommonPageModel;
import org.darod.elearning.gateway.dataobject.MessageDO;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface MessageDOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message
     *
     * @mbg.generated Tue Jul 16 13:03:16 CST 2019
     */
    int deleteByPrimaryKey(Integer messageId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message
     *
     * @mbg.generated Tue Jul 16 13:03:16 CST 2019
     */
    int insert(MessageDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message
     *
     * @mbg.generated Tue Jul 16 13:03:16 CST 2019
     */
    int insertSelective(MessageDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message
     *
     * @mbg.generated Tue Jul 16 13:03:16 CST 2019
     */
    MessageDO selectByPrimaryKey(Integer messageId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message
     *
     * @mbg.generated Tue Jul 16 13:03:16 CST 2019
     */
    int updateByPrimaryKeySelective(MessageDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table message
     *
     * @mbg.generated Tue Jul 16 13:03:16 CST 2019
     */
    int updateByPrimaryKey(MessageDO record);


    List<MessageDO> getAllMessage(@Param("userId") Integer userId, @Param("commonPageModel") CommonPageModel commonPageModel);

    MessageDO getMessageById(@Param("messageId") Integer messageId);

    List<MessageDO> getMessagesUnread(@Param("userId") Integer userId, @Param("commonPageModel") CommonPageModel commonPageModel);

    Integer getMessagesUnreadCount(@Param("userId") Integer userId);

    void deleteMessage(@Param("messageId") Integer messageId);

    void deleteAllMessage(@Param("userId") Integer userId);

    void deleteAllMessageRead(@Param("userId") Integer userId);

    void setMessageRead(@Param("messageId") Integer messageId);

    void setAllMessageRead(@Param("userId") Integer userId);
}