package org.darod.elearning.gateway.dao;

import org.apache.ibatis.annotations.Param;
import org.darod.elearning.gateway.dataobject.LiveRecordDO;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface LiveRecordDOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table live_record
     *
     * @mbg.generated Mon Jul 22 21:43:10 CST 2019
     */
    int deleteByPrimaryKey(Integer liveRecordId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table live_record
     *
     * @mbg.generated Mon Jul 22 21:43:10 CST 2019
     */
    int insert(LiveRecordDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table live_record
     *
     * @mbg.generated Mon Jul 22 21:43:10 CST 2019
     */
    int insertSelective(LiveRecordDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table live_record
     *
     * @mbg.generated Mon Jul 22 21:43:10 CST 2019
     */
    LiveRecordDO selectByPrimaryKey(Integer liveRecordId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table live_record
     *
     * @mbg.generated Mon Jul 22 21:43:10 CST 2019
     */
    int updateByPrimaryKeySelective(LiveRecordDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table live_record
     *
     * @mbg.generated Mon Jul 22 21:43:10 CST 2019
     */
    int updateByPrimaryKey(LiveRecordDO record);

    List<LiveRecordDO> getCurLiveRecordByTeacherId(Integer teacherId);

    List<LiveRecordDO> getCurLiveRecordByTeacherIdForUpdate(Integer teacherId);

    LiveRecordDO getCurLiveRecordByChannelAndSecret(@Param("channelId") String channelId, @Param("secret") String secret);

    LiveRecordDO getCurLiveRecordByChannelAndSecretForUpdate(@Param("channelId") String channelId, @Param("secret") String secret);

    LiveRecordDO getCurLiveRecordByChannel(@Param("channelId") String channelId, @Param("isUpdate") Boolean isUpdate);
}